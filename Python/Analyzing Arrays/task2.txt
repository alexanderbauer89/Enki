Let's practice filtering through lists of more complex objects, such as tuples. filter lets us use a function to check multiple conditions in one sweep of the list.
What is the result of the following code snippet's exection?

customers =
  [('Jack',
 'jack@corporate.com', True),
   ('Liz', 'liz@example.com',
  True),
   ('Sam', 'sam@coporate.com',
  True),
   ('Jess', 
  'jess@corporate.com', False)]
  
def special_function(customer)
:
 if len(customer[1]) > 0:
  return 'corporate.com' in
customer[1]
  and customer[2]
 return False

print(filter(special_function, customers))

???

The 3-tuples of customers whose names are longer than zero characters.
The names of customers where their associated boolean is True and the email includes the substring 'corporate.com'.
The 3-tuples of customers where their associated boolean is not True and the email does not include the substring 'corporate.com'.
The 3-tuples of customer where the associated boolean is True and the email includes the substring 'corporate.com'.
The 3-tuples of customers where their associated boolean is True or the email includes the substring 'corporate.com'.

> The 3-tuples of customer where the associated boolean is True and the email includes the substring 'corporate.com'.
